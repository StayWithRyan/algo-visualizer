import TextItem from "../TextItem"
import HorizontalLine from "../HorizontalLine"

function RabinKarpInfo() {
    return (
        <>
            <TextItem>
                Алгоритм Рабіна-Карпа також переміщує зразок на один крок, як і алгоритм прямого пошуку.
                На кожному кроці відбувається перевірка хеш-значення зразка 
                з хеш-значенням поточного підрядка тексту, і якщо хеш-значення збігаються,
                тільки тоді починається перевірка символів як і в алгоритмі прямого пошуку.
            </TextItem>
            <TextItem>
                Ідея алгоритму полягає в заміні текстових рядків числами, порівняння яких можна виконувати значно швидше.
            </TextItem>
            <TextItem>Складність алгоритму - O(n+m), де n — довжина тексту, m — довжина зразка.</TextItem>

            <HorizontalLine/>

            <TextItem>Покроковий опис алгоритму Рабіна - Карпа: (n — довжина тексту, m — довжина зразка):</TextItem>
            <TextItem tabs={1}>1. Препроцесінг зразка: Вирахувати його хеш-значення</TextItem>
            <TextItem tabs={1}>2. Присвоїти i = 0</TextItem>
            <TextItem tabs={1}>
                3. Вирахувати хеш значення підрядка (довжиною m) тексту за індексом i
            </TextItem>
            <TextItem tabs={1}>
                4. Якщо хеш-значення зразка і підрядка збігаються, то перейти до кроку 5, інакше перейти до кроку 6
            </TextItem>
            <TextItem tabs={1}>
                5. Перевірити чи знаходиться зразок у тексті за індексом i, по черзі порівнявши всі символи.
                Якщо зразок знайдено, то алгоритм завершено.
            </TextItem>
            <TextItem tabs={1}>
                {`6. Присвоїти i = i+1. Якщо i <= N-M, то перейти до кроку 3, інакше алгоритм завершено, зразок не знайдено `}
            </TextItem>
        </>
    );
}

export default RabinKarpInfo;

